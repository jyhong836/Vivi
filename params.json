{"name":"Vivi","tagline":"Vivi is a XMPP chatting client on OS X.","body":"# Vivi\r\nVivi is a XMPP chatting client at OS X. [Swiften](http://swift.im/swiften.html) is used as XMPP client library to communicate with XMPP server.\r\n\r\nThe main language is Swift language. All UI code is programed with Swift. However, the XMPP tool is written with Objective-C and C++, since Swiften is a C++ based lib. The Objective-C and C++ codes are all included in ViviSwiften.framework. The framework provide the protocol for Swift based UI code. As a result, you can implement the protocol of the framework to write your own XMPP client GUI.\r\n\r\n### Version 1.0 Features\r\n\r\nHere list all features would be implement in Vivi version 1.0. \r\n\r\n- [ ] Single chat window.\r\n- [ ] Window split.\r\n- [ ] Notification and reply on notification bar.\r\n- [ ] Contact tag.\r\n- [ ] AIML Chat bot assistant.\r\n- [ ] File transfer.\r\n- [ ] Voice transfer in one button.\r\n- [ ] Voice call.\r\n\r\nIf you have any seggestion or report a bug, please create an issue at [GitHub](https://github.com/jyhong836/Vivi/issues).\r\n\r\n### Compile Swiften\r\n\r\nBefore starting to code, compile the Swiften lib firstly. \r\n\r\n+ If you have not installed `libboost*` (check with `ls /usr/local/lib | grep boost`), run below in bash:\r\n    ```bash\r\n    ./setupSwiften.sh\r\n    ```\r\n\r\n+ If you have installed `libboost*`, still run the command above, and you need to add `/usr/local/include/boost` and  `/usr/local/lib/` to `Header Search Paths` and `Library Search Paths` in Xcode Building Settings.\r\n\r\nRead `SwiftXMPP/Documentation/BuildingOnUnix` for more details about compiling Swiften.\r\n\r\n##### Some Issues\r\n\r\nIf it occurred to be some **linker error** or **compile error** about Swiften when building Xcode target, please check your linker and c flag settings flow below steps:\r\n\r\n1. In xcodeproject porject settings `Build Settings` tab, check the value of `Header Search Paths` and `Library Search Paths` (use the search tool in Build Settings to search the defines). They should point to the dir include Swiften's source dir `Swiften` and library `Swifetn.a`.\r\n2. In xcodeproject porject settings `Build Settings` tab, check the value of `SWIFTEN_LINKER_FLAGS` and `SWIFTEN_C_FLAGS`. \r\n\r\nThe Swiften provide a tool to print the linker and c flag messages:\r\n\r\n```bash\r\ncd Frameworks/bin\r\n./swiften-config --libs # print to be linked libs\r\n./swiften-config --cflag # print c++ flags\r\n# ignore the -LXXX or -IXXX output, it has been set in 'Build Phase' and 'Header Search Paths'\r\n```\r\n\r\n### Development\r\n\r\nThis client is developed by Junyuan Hong (jyhong836@gmail.com), started at Jul 22, 2015. If you want to take part in development, just contact me.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}